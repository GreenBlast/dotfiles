
# set -g @catppuccin_window_left_separator "█"
# set -g @catppuccin_window_right_separator "█ "
# set -g @catppuccin_window_number_position "right"
# # set -g @catppuccin_window_middle_separator "  █"
# set -g @catppuccin_window_middle_separator "█"

# set -g @catppuccin_window_right_separator "█ "

set -g @catppuccin_window_current_fill "number"

set -g @catppuccin_status_modules_right "application session date_time"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"



set -g @catppuccin_window_left_separator null
set -g @catppuccin_window_right_separator null
set -g @catppuccin_window_middle_separator null

set -g @catppuccin_window_right_separator null


set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " | "

set -g @catppuccin_window_default_fill "none"

set -g @catppuccin_window_current_fill "all"



# set -g @catppuccin_date_time_icon "⏱"
set -g @catppuccin_date_time_icon "◷"

## Note to self, after checking I think mocha might be the most dark
# set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, mocha

# Use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

# Abilty to switch to prefix to CTRL-B
bind-key F9 set-option -g prefix C-b
bind-key F10 set-option -g prefix C-a

# Make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

run-shell 'tmux setenv -g OS $(uname -s)'
run-shell "tmux setenv -g ZSH_LOCATION $(which zsh)"
# Set zsh as default shell

if-shell '[[ $OS == "Darwin" ]]' \
    "set-option -g default-shell \"/usr/local/bin/zsh\"" \
    "set-option -g default-shell \"/usr/bin/zsh\""



# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Spawn new instances in the current dir
bind '%' split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Colors
set -g default-terminal "screen-256color"

# No numbering gaps between windows
set-option -g renumber-windows on

# Switch windows with ctrl+left/right
bind-key -n C-Left swap-window -t -1
bind-key -n C-Right swap-window -t +1

# Set mode to vi
set-window-option -g mode-keys vi

# Mouse scroll in tmux
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'
#set -g mode-mouse on

# Setting default color terminal
set-option -g default-terminal screen-256color

#Alert on changes
setw -g monitor-activity on
set -g visual-activity off

# Trying to escape modes faster in vim
set -sg escape-time 0

# Setting vim like movement of panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R


# uncomment below stanza to enable smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind C-l send-keys 'C-l'

# Set the time to wait till the prefix timeout (while prefix active, can send more commands)
set-option -g repeat-time 0

# Set quick pane switch
bind-key a last-pane

# q will display panes
bind-key q display-panes


# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Don't let the window be renamed after you changed it
set-option -g allow-rename off


# Experimantal lines:


# Set up window title support to be the machine and whatever window we're using; if using session 1 on machine hostname, and looking at window 3 whose
# name is blog, this looks like "1@hostname 3:blog"
set -g set-titles 'on'
set -g set-titles-string '#S@#T #I:#W'


# Alias 'clear' to remove scrollback as well within the shells of tmux
# set-option -g default-command '$SHELL --rcfile <(echo " \
#         . ~/.bashrc; \
#         alias clear=\"command clear && tmux clear\"; \
#         ")'

# Allow for longer history in scrollback buffers; note that tmux-resurrect
# (used later) has to save this much information.  Hence the limit of 10000
# rather than more; any more, and you should be dumping to a file anyhow.
set-option -g history-limit 10000


# Allow resizing panes quickly with <prefix> shift+arrows
#bind C-S-Left resize-pane -L 10
#bind C-S-Right resize-pane -R 10
#bind C-S-Up resize-pane -U 10
#bind C-S-Down resize-pane -D 10

#bind H resize-pane -L 10
#bind L resize-pane -R 10
#bind K resize-pane -U 10
#bind J resize-pane -D 10

# Enable continuum by default; requires sometimes purging ~/.tmux/resurrect
set -g @continuum-restore 'on'


# Make resurrect automatically save pane contents to give clue as to what the
# user was doing.  Note that we do NOT want to restore processes, as
# automatically re-running anything can be disorienting (even the vim stuff,
# in my opinion).
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'false'

# Resurrect vim sessions
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# PLUGINS

# Plugin manager
set -g @plugin 'tmux-plugins/tpm'

# Saves and restores tmux sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Basic tmux settings
set -g @plugin 'tmux-plugins/tmux-sensible'

# Better panes control options
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Better sessions control options
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Copy to the system's clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# Adds regex based search and copy
set -g @plugin 'tmux-plugins/tmux-copycat'

# Automatic sessions save and restore
set -g @plugin 'tmux-plugins/tmux-continuum'

# Copy pasting with vimium/vimperator like hints.
set -g @plugin 'Morantron/tmux-fingers'

# Themes
set -g @plugin 'catppuccin/tmux'



# must be at the bottom
run-shell '~/.tmux/plugins/tpm/tpm'
